import { describe, it } from '@xutl/test';
import assert from 'assert';

import matches, { pick } from './semver';

describe('semver', () => {
	describe('matches', () => {
		describe('>=', () => {
			it('>=1.2.5 : 1.2.1', () => assert(!matches('>=1.2.5', '1.2.1')));
			it('>=1.2.5 : 1.2.5', () => assert(matches('>=1.2.5', '1.2.5')));
			it('>=1.2.5 : 1.2.8', () => assert(matches('>=1.2.5', '1.2.8')));
			it('>=1.2.5 : 1.3.0', () => assert(matches('>=1.2.5', '1.3.0')));
			it('>=1.2.5 : 2.2.5', () => assert(matches('>=1.2.5', '2.2.5')));
			it('>=1.2.5 : 3.2.5', () => assert(matches('>=1.2.5', '3.2.5')));
		});
		describe('>', () => {
			it('>1.2.5 : 1.2.1', () => assert(!matches('>1.2.5', '1.2.1')));
			it('>1.2.5 : 1.2.5', () => assert(!matches('>1.2.5', '1.2.5')));
			it('>1.2.5 : 1.2.8', () => assert(matches('>1.2.5', '1.2.8')));
			it('>1.2.5 : 1.3.0', () => assert(matches('>1.2.5', '1.3.0')));
			it('>1.2.5 : 2.2.5', () => assert(matches('>1.2.5', '2.2.5')));
			it('>1.2.5 : 3.2.5', () => assert(matches('>1.2.5', '3.2.5')));
		});
		describe('<=', () => {
			it('<=2.2.2 : 1.2.1', () => assert(matches('<=2.2.2', '1.2.1')));
			it('<=2.2.2 : 1.2.5', () => assert(matches('<=2.2.2', '1.2.5')));
			it('<=2.2.2 : 1.2.8', () => assert(matches('<=2.2.2', '1.2.8')));
			it('<=2.2.2 : 1.3.0', () => assert(matches('<=2.2.2', '1.3.0')));
			it('<=2.2.2 : 2.2.5', () => assert(!matches('<=2.2.2', '2.2.5')));
			it('<=2.2.2 : 3.2.5', () => assert(!matches('<=2.2.5', '3.2.5')));
		});
		describe('<', () => {
			it('<2.2.2 : 1.2.1', () => assert(matches('<2.2.2', '1.2.1')));
			it('<2.2.2 : 1.2.5', () => assert(matches('<2.2.2', '1.2.5')));
			it('<2.2.2 : 1.2.8', () => assert(matches('<2.2.2', '1.2.8')));
			it('<2.2.2 : 2.2.2', () => assert(!matches('<2.2.2', '2.2.2')));
			it('<2.2.2 : 2.2.5', () => assert(!matches('<2.2.2', '2.2.5')));
			it('<2.2.2 : 3.2.5', () => assert(!matches('<2.2.5', '3.2.5')));
		});
		describe('=', () => {
			it('=2.2.2 : 1.2.1', () => assert(!matches('=2.2.2', '1.2.1')));
			it('=2.2.2 : 1.2.5', () => assert(!matches('=2.2.2', '1.2.5')));
			it('=2.2.2 : 1.2.8', () => assert(!matches('=2.2.2', '1.2.8')));
			it('=2.2.2 : 2.2.2', () => assert(matches('=2.2.2', '2.2.2')));
			it('=2.2.2 : 2.2.5', () => assert(!matches('=2.2.2', '2.2.5')));
			it('=2.2.2 : 3.2.5', () => assert(!matches('=2.2.5', '3.2.5')));
		});
		describe('^', () => {
			it('^1.2.5 : 0.2.0', () => assert(!matches('^1.2.5', '0.2.0')));
			it('^1.2.5 : 1.2.0', () => assert(!matches('^1.2.5', '1.2.0')));
			it('^1.2.5 : 1.2.5', () => assert(matches('^1.2.5', '1.2.5')));
			it('^1.2.5 : 1.2.7', () => assert(matches('^1.2.5', '1.2.7')));
			it('^1.2.5 : 1.3.0', () => assert(matches('^1.2.5', '1.3.0')));
			it('^1.2.5 : 2.0.0', () => assert(!matches('^1.2.5', '2.0.0')));
			it('^1.2.5 : 2.0.1', () => assert(!matches('^1.2.5', '2.0.1')));
			it('^1.2.5 : 3.0.0', () => assert(!matches('^1.2.5', '3.0.0')));
		});
		describe('~', () => {
			it('~1.2.5 : 0.2.0', () => assert(!matches('~1.2.5', '0.2.0')));
			it('~1.2.5 : 1.2.0', () => assert(!matches('~1.2.5', '1.2.0')));
			it('~1.2.5 : 1.2.5', () => assert(matches('~1.2.5', '1.2.5')));
			it('~1.2.5 : 1.2.7', () => assert(matches('~1.2.5', '1.2.7')));
			it('~1.2.5 : 1.3.0', () => assert(!matches('~1.2.5', '1.3.0')));
			it('~1.2.5 : 2.0.0', () => assert(!matches('~1.2.5', '2.0.0')));
			it('~1.2.5 : 2.0.1', () => assert(!matches('~1.2.5', '2.0.1')));
			it('~1.2.5 : 3.0.0', () => assert(!matches('~1.2.5', '3.0.0')));
		});
	});
	describe('pick', () => {
		it('^1.2.5', () => assert.strictEqual(pick('^1.2.5', '1.2.5', '1.2.6', '1.3.0', '1.4.0', '2.0.1', '2.1.0', '3.0.0'), '1.4.0'));
		it('~1.2.5', () => assert.strictEqual(pick('~1.2.5', '1.2.5', '1.2.6', '1.2.6-pre1', '1.3.0', '1.4.0', '2.0.1', '2.1.0', '3.0.0'), '1.2.6'));
	});
});
